sudo: required
dist: trusty
language: c
env:
  matrix:
    - LUA=5.3 LGIVER=      LUANAME=lua5.3 LUALIBRARY=/usr/lib/liblua.so
  global:
    # Secure token to push to gh-pages.
    - secure: "LZxt9559+V3qJMdVgmKW4RYTt8ZINooex/qsnoEJUtZloj/eFNG4COT2z6a2yeH2tKWzknCsmV9nLPJiNEA2KLcyqDhjFQvJwKmsBuhGUmLyeQgfenjweorRjO8NT18X1SAEUXAMnClPu+OeTDs4BAuVn5foGZ7xpcRg2E+j2mc="

before_install:
  - if [ -z $LUAINCLUDE ]; then LUAINCLUDE=/usr/include/${LUANAME}; fi
  - if [ -z $LUALIBRARY ]; then LUALIBRARY=/usr/lib/x86_64-linux-gnu/lib${LUANAME}.so; fi
  - cmake --version

install:
  # Travis boilerplate: the apt-get cache might be out of date.
  - travis_retry sudo apt-get update -qq

  # Do not install recommended packages with apt-get.
  - echo 'APT::Install-Recommends "false";' | sudo tee /etc/apt/apt.conf.d/no-recommends

  # Install build dependencies.
  # See also `apt-cache showsrc awesome | grep -E '^(Version|Build-Depends)'`.
  - sudo apt-get install -y libcairo2-dev xmlto asciidoc libpango1.0-dev libxcb-xtest0-dev libxcb-icccm4-dev libxcb-randr0-dev libxcb-keysyms1-dev libxcb-xinerama0-dev libdbus-1-dev libxdg-basedir-dev libstartup-notification0-dev imagemagick libxcb1-dev libxcb-shape0-dev libxcb-util0-dev libx11-xcb-dev libxcb-cursor-dev libxcb-xkb-dev libxkbcommon-dev libxkbcommon-x11-dev

  # Deps for functional tests.
  - sudo apt-get install -y dbus-x11 xterm xdotool xterm xvfb rxvt-unicode

  # Install Lua (per env).
  # Note that Lua 5.3 is installed by hand, because not available in trusty
  - |
    if [[ "$LUA" == "5.3" ]]; then
      wget http://www.lua.org/ftp/lua-5.3.2.tar.gz -O lua.tar.gz
      tar -xvzf lua.tar.gz
      cd lua-*
      (cd src && make SYSCFLAGS="-DLUA_USE_LINUX -ULUA_COMPAT_5_2" SYSLIBS="-Wl,-E -ldl -lreadline" LUA_A=liblua.so MYCFLAGS="-fPIC" RANLIB=: AR="gcc -shared -ldl -o" liblua.so) || exit 1
      sudo make INSTALL_TOP=/usr/ INSTALL_INC=${LUAINCLUDE} TO_LIB=liblua.so linux install || exit 1
      cd ..
    else
      sudo apt-get install -y lib${LUANAME}-dev ${LUANAME} ${INSTALL_PKGS}
    fi

  # "Create" /usr/bin/lua if needed (Yup, this is a bad hack)
  - if [ ! -e "/usr/bin/lua" ]; then sudo ln -s /usr/bin/luajit /usr/bin/lua; fi

  # Install luarocks (for the selected Lua version).
  - travis_retry wget https://keplerproject.github.io/luarocks/releases/luarocks-2.2.2.tar.gz
  - tar xf luarocks-2.2.2.tar.gz
  - cd luarocks-2.2.2
  - ./configure --lua-version=$LUA --with-lua-include=${LUAINCLUDE} ${LUAROCKS_ARGS}
  - make build
  - sudo make install
  - cd ..

  # lgi.
  - sudo apt-get install -y gir1.2-pango-1.0 libgirepository1.0-dev
  - travis_retry sudo luarocks install lgi $LGIVER

  # Install busted for "make check-unit".
  - travis_retry sudo luarocks install busted
  # Install luacheck for "make luacheck".
  - travis_retry sudo luarocks install luacheck

  # Install ldoc for building docs.
  - travis_retry sudo luarocks install ldoc
  - travis_retry sudo luarocks install lua-discount

  # Instal luacov-coveralls for code coverage testing.
  - if [ "$DO_COVERAGE" = "true" ]; then sudo luarocks install luacov-coveralls; fi

  # Determine custom version.
  - export AWESOME_VERSION="${TRAVIS_BRANCH}-g$(git rev-parse --short HEAD)"
  - 'if [ "$TRAVIS_PULL_REQUEST" != false ]; then AWESOME_VERSION="${AWESOME_VERSION}-PR${TRAVIS_PULL_REQUEST}"; fi'

script:
  - export CMAKE_ARGS="-DLUA_LIBRARY=${LUALIBRARY} -DLUA_INCLUDE_DIR=${LUAINCLUDE} -D OVERRIDE_VERSION=$AWESOME_VERSION"
  - make && sudo env PATH=$PATH make install && awesome --version && make check
  - |
    if [ "$DO_COVERAGE" = "true" ]; then
        make check-coverage || exit 1;
        sed -i "1 i\\require('luacov.runner')('"$PWD"/.luacov')" build/awesomerc.lua || exit 1
        BUILD_DIRECTORY="" tests/run.sh || exit 1
    fi
  - sudo make package
  - echo $TRAVIS_TAG
  - echo $TRAVIS_COMMIT

after_success:
  # Push updated API docs for relevant branches, e.g. non-PRs builds on master.
  - if [ "$BUILD_APIDOC" = "true" ]; then build-utils/travis-apidoc.sh; fi
  # Push code coverage information
  - if [ "$DO_COVERAGE" = "true" ]; then BUILD_DIRECTORY="$(pwd)/$(readlink build)/" SOURCE_DIRECTORY="$(pwd)/" luacov-coveralls --verbose --merge; fi

before_deploy: "mv **/*.deb awesome-master-ewnd9-${TRAVIS_TAG}.deb && sudo chmod 777 awesome-master-ewnd9-${TRAVIS_TAG}.deb"
deploy:
  provider: releases
  api_key:
    secure: qzJ06I4HoByEZWr27DigHQfZI4EvpnefzK1MImZ+jvNl8k5PfxqDcqLAl3YKOKwGjITglV6n3hv1UkdMZFSVYu7kUPwKHXo3vDVGAo9R7Sn2Eg3/zl+31DqKZBp2XNSKCCkasBq72s4/QZAkXWCYu2jg/fqsC/5BGJtDprBstBwSG2ecGCdXC2qtPEOxMIYaO3wCbe1GLV9MwIPIMUoekPHac306DdJ1B/J7fDOZH8QOxlXL4kgjJVUVgK0kaDO/UYnWsOeNdAIZY7UQpQm0C5xzEEXfWqQCnS51xpGswkA7WPVHjpARZv+aSXDfr2Mee4A7JT35YLUHbMIvI/CvgoZsKSjgVVqWNQqt282/7wWEuwInY5RbJn8YQUTn1/mI6LxShOXbYzgD7Fia50eHFm468Nj+JvS9V6unrC0/HHbnPLwhM5d7C/sAMhduf9MOsGTxFWJNtcpw0809LV9zP1LXG0B4tWyXqMn3UDOEFh9/J1/ncWHwDI8VhnEo6LWO0giWvoXsA7+B1Lm58YBOT4g+KOv86/PyDUQRZZoME7sX8PqV5iRN+qG2ndP0x+PYrcvtYFokJ8hJ4vvTD5GqB/DpUMIyMY2S/9gShdfrXStNBoprtDMobiCrQi1KdpRJ0c1pa90ezzBXMo0sfb7TO6J4Thvb8DTIJqhaYtTXNjE=
  file: "awesome-master-ewnd9-${TRAVIS_TAG}.deb"
  skip_cleanup: true
  on:
    tags: true
